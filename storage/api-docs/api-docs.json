{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel OpenApi Demo Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://scaffoldingnew.test/api",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/account_promotions": {
            "get": {
                "tags": [
                    "AccountPromotions"
                ],
                "summary": "Get list of account_promotions",
                "description": "Returns list of account_promotions",
                "operationId": "getAccountPromotionsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountPromotionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/account_promotions/{id}": {
            "get": {
                "tags": [
                    "AccountPromotions"
                ],
                "summary": "Get account_promotion information",
                "description": "Returns account_promotion data",
                "operationId": "getAccountPromotionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AccountPromotion id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountPromotion"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/account_promotions": {
            "get": {
                "tags": [
                    "AccountPromotions"
                ],
                "summary": "Get list of Select account_promotions",
                "description": "Returns list of Select account_promotions",
                "operationId": "getSelectAccountPromotionsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountPromotionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/ads": {
            "get": {
                "tags": [
                    "Ads"
                ],
                "summary": "Get list of ads",
                "description": "Returns list of ads",
                "operationId": "getAdsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/ads/{id}": {
            "get": {
                "tags": [
                    "Ads"
                ],
                "summary": "Get ad information",
                "description": "Returns ad data",
                "operationId": "getAdById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Ad id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ad"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/ads": {
            "get": {
                "tags": [
                    "Ads"
                ],
                "summary": "Get list of Select ads",
                "description": "Returns list of Select ads",
                "operationId": "getSelectAdsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "description": "Returns list of categories",
                "operationId": "getCategoriesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category information",
                "description": "Returns category data",
                "operationId": "getCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of Select categories",
                "description": "Returns list of Select categories",
                "operationId": "getSelectCategoriesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/content_requests": {
            "get": {
                "tags": [
                    "ContentRequests"
                ],
                "summary": "Get list of content_requests",
                "description": "Returns list of content_requests",
                "operationId": "getContentRequestsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRequestResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/content_requests/{id}": {
            "get": {
                "tags": [
                    "ContentRequests"
                ],
                "summary": "Get content_request information",
                "description": "Returns content_request data",
                "operationId": "getContentRequestById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ContentRequest id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRequest"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/content_requests": {
            "get": {
                "tags": [
                    "ContentRequests"
                ],
                "summary": "Get list of Select content_requests",
                "description": "Returns list of Select content_requests",
                "operationId": "getSelectContentRequestsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRequestResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/coupons": {
            "get": {
                "tags": [
                    "Coupons"
                ],
                "summary": "Get list of coupons",
                "description": "Returns list of coupons",
                "operationId": "getCouponsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/coupons/{id}": {
            "get": {
                "tags": [
                    "Coupons"
                ],
                "summary": "Get coupon information",
                "description": "Returns coupon data",
                "operationId": "getCouponById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/coupons": {
            "get": {
                "tags": [
                    "Coupons"
                ],
                "summary": "Get list of Select coupons",
                "description": "Returns list of Select coupons",
                "operationId": "getSelectCouponsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/features": {
            "get": {
                "tags": [
                    "Features"
                ],
                "summary": "Get list of features",
                "description": "Returns list of features",
                "operationId": "getFeaturesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeatureResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/features/{id}": {
            "get": {
                "tags": [
                    "Features"
                ],
                "summary": "Get feature information",
                "description": "Returns feature data",
                "operationId": "getFeatureById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Feature id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feature"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/features": {
            "get": {
                "tags": [
                    "Features"
                ],
                "summary": "Get list of Select features",
                "description": "Returns list of Select features",
                "operationId": "getSelectFeaturesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeatureResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/filtered_words": {
            "get": {
                "tags": [
                    "FilteredWords"
                ],
                "summary": "Get list of filtered_words",
                "description": "Returns list of filtered_words",
                "operationId": "getFilteredWordsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilteredWordResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/filtered_words/{id}": {
            "get": {
                "tags": [
                    "FilteredWords"
                ],
                "summary": "Get filtered_word information",
                "description": "Returns filtered_word data",
                "operationId": "getFilteredWordById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "FilteredWord id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilteredWord"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/filtered_words": {
            "get": {
                "tags": [
                    "FilteredWords"
                ],
                "summary": "Get list of Select filtered_words",
                "description": "Returns list of Select filtered_words",
                "operationId": "getSelectFilteredWordsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilteredWordResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/openning_screens": {
            "get": {
                "tags": [
                    "OpenningScreens"
                ],
                "summary": "Get list of openning_screens",
                "description": "Returns list of openning_screens",
                "operationId": "getOpenningScreensList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenningScreenResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/openning_screens/{id}": {
            "get": {
                "tags": [
                    "OpenningScreens"
                ],
                "summary": "Get openning_screen information",
                "description": "Returns openning_screen data",
                "operationId": "getOpenningScreenById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OpenningScreen id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenningScreen"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/openning_screens": {
            "get": {
                "tags": [
                    "OpenningScreens"
                ],
                "summary": "Get list of Select openning_screens",
                "description": "Returns list of Select openning_screens",
                "operationId": "getSelectOpenningScreensList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenningScreenResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/options": {
            "get": {
                "tags": [
                    "Options"
                ],
                "summary": "Get list of options",
                "description": "Returns list of options",
                "operationId": "getOptionsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OptionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/options/{id}": {
            "get": {
                "tags": [
                    "Options"
                ],
                "summary": "Get option information",
                "description": "Returns option data",
                "operationId": "getOptionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Option id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Option"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/options": {
            "get": {
                "tags": [
                    "Options"
                ],
                "summary": "Get list of Select options",
                "description": "Returns list of Select options",
                "operationId": "getSelectOptionsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OptionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/order_requests": {
            "get": {
                "tags": [
                    "OrderRequests"
                ],
                "summary": "Get list of order_requests",
                "description": "Returns list of order_requests",
                "operationId": "getOrderRequestsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRequestResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/order_requests/{id}": {
            "get": {
                "tags": [
                    "OrderRequests"
                ],
                "summary": "Get order_request information",
                "description": "Returns order_request data",
                "operationId": "getOrderRequestById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OrderRequest id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRequest"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/order_requests": {
            "get": {
                "tags": [
                    "OrderRequests"
                ],
                "summary": "Get list of Select order_requests",
                "description": "Returns list of Select order_requests",
                "operationId": "getSelectOrderRequestsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRequestResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/points": {
            "get": {
                "tags": [
                    "Points"
                ],
                "summary": "Get list of points",
                "description": "Returns list of points",
                "operationId": "getPointsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PointResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/points/{id}": {
            "get": {
                "tags": [
                    "Points"
                ],
                "summary": "Get point information",
                "description": "Returns point data",
                "operationId": "getPointById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Point id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Point"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/points": {
            "get": {
                "tags": [
                    "Points"
                ],
                "summary": "Get list of Select points",
                "description": "Returns list of Select points",
                "operationId": "getSelectPointsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PointResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/policies": {
            "get": {
                "tags": [
                    "Policies"
                ],
                "summary": "Get list of policies",
                "description": "Returns list of policies",
                "operationId": "getPoliciesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PolicyResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/policies/{id}": {
            "get": {
                "tags": [
                    "Policies"
                ],
                "summary": "Get policy information",
                "description": "Returns policy data",
                "operationId": "getPolicyById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Policy id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Policy"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/policies": {
            "get": {
                "tags": [
                    "Policies"
                ],
                "summary": "Get list of Select policies",
                "description": "Returns list of Select policies",
                "operationId": "getSelectPoliciesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PolicyResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/providers": {
            "get": {
                "tags": [
                    "Providers"
                ],
                "summary": "Get list of providers",
                "description": "Returns list of providers",
                "operationId": "getProvidersList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/providers/{id}": {
            "get": {
                "tags": [
                    "Providers"
                ],
                "summary": "Get provider information",
                "description": "Returns provider data",
                "operationId": "getProviderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provider id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/providers": {
            "get": {
                "tags": [
                    "Providers"
                ],
                "summary": "Get list of Select providers",
                "description": "Returns list of Select providers",
                "operationId": "getSelectProvidersList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/shop_categories": {
            "get": {
                "tags": [
                    "ShopCategories"
                ],
                "summary": "Get list of shop_categories",
                "description": "Returns list of shop_categories",
                "operationId": "getShopCategoriesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopCategoryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/shop_categories/{id}": {
            "get": {
                "tags": [
                    "ShopCategories"
                ],
                "summary": "Get shop_category information",
                "description": "Returns shop_category data",
                "operationId": "getShopCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ShopCategory id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopCategory"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/shop_categories": {
            "get": {
                "tags": [
                    "ShopCategories"
                ],
                "summary": "Get list of Select shop_categories",
                "description": "Returns list of Select shop_categories",
                "operationId": "getSelectShopCategoriesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopCategoryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/shop_services": {
            "get": {
                "tags": [
                    "ShopServices"
                ],
                "summary": "Get list of shop_services",
                "description": "Returns list of shop_services",
                "operationId": "getShopServicesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopServiceResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/shop_services/{id}": {
            "get": {
                "tags": [
                    "ShopServices"
                ],
                "summary": "Get shop_service information",
                "description": "Returns shop_service data",
                "operationId": "getShopServiceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ShopService id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopService"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/shop_services": {
            "get": {
                "tags": [
                    "ShopServices"
                ],
                "summary": "Get list of Select shop_services",
                "description": "Returns list of Select shop_services",
                "operationId": "getSelectShopServicesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopServiceResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/sliders": {
            "get": {
                "tags": [
                    "Sliders"
                ],
                "summary": "Get list of sliders",
                "description": "Returns list of sliders",
                "operationId": "getSlidersList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SliderResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/sliders/{id}": {
            "get": {
                "tags": [
                    "Sliders"
                ],
                "summary": "Get slider information",
                "description": "Returns slider data",
                "operationId": "getSliderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Slider id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Slider"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/sliders": {
            "get": {
                "tags": [
                    "Sliders"
                ],
                "summary": "Get list of Select sliders",
                "description": "Returns list of Select sliders",
                "operationId": "getSelectSlidersList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SliderResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/specialities": {
            "get": {
                "tags": [
                    "Specialities"
                ],
                "summary": "Get list of specialities",
                "description": "Returns list of specialities",
                "operationId": "getSpecialitiesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialityResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/specialities/{id}": {
            "get": {
                "tags": [
                    "Specialities"
                ],
                "summary": "Get speciality information",
                "description": "Returns speciality data",
                "operationId": "getSpecialityById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Speciality id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Speciality"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/specialities": {
            "get": {
                "tags": [
                    "Specialities"
                ],
                "summary": "Get list of Select specialities",
                "description": "Returns list of Select specialities",
                "operationId": "getSelectSpecialitiesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialityResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/wallets": {
            "get": {
                "tags": [
                    "Wallets"
                ],
                "summary": "Get list of wallets",
                "description": "Returns list of wallets",
                "operationId": "getWalletsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/wallets/{id}": {
            "get": {
                "tags": [
                    "Wallets"
                ],
                "summary": "Get wallet information",
                "description": "Returns wallet data",
                "operationId": "getWalletById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Wallet id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Wallet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/select/wallets": {
            "get": {
                "tags": [
                    "Wallets"
                ],
                "summary": "Get list of Select wallets",
                "description": "Returns list of Select wallets",
                "operationId": "getSelectWalletsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountPromotion": {
                "title": "AccountPromotion",
                "description": "AccountPromotion model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new account_promotion",
                        "type": "string",
                        "example": "A nice account_promotion"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "AccountPromotion"
                }
            },
            "Ad": {
                "title": "Ad",
                "description": "Ad model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new ad",
                        "type": "string",
                        "example": "A nice ad"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Ad"
                }
            },
            "Category": {
                "title": "Category",
                "description": "Category model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new category",
                        "type": "string",
                        "example": "A nice category"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Category"
                }
            },
            "Collaborator": {
                "title": "Collaborator",
                "description": "Collaborator model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new collaborator",
                        "type": "string",
                        "example": "A nice collaborator"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Collaborator"
                }
            },
            "ContentRequest": {
                "title": "ContentRequest",
                "description": "ContentRequest model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new content_request",
                        "type": "string",
                        "example": "A nice content_request"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ContentRequest"
                }
            },
            "Coupon": {
                "title": "Coupon",
                "description": "Coupon model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new coupon",
                        "type": "string",
                        "example": "A nice coupon"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Coupon"
                }
            },
            "Feature": {
                "title": "Feature",
                "description": "Feature model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new feature",
                        "type": "string",
                        "example": "A nice feature"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Feature"
                }
            },
            "FilteredWord": {
                "title": "FilteredWord",
                "description": "FilteredWord model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new filtered_word",
                        "type": "string",
                        "example": "A nice filtered_word"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "FilteredWord"
                }
            },
            "OpenningScreen": {
                "title": "OpenningScreen",
                "description": "OpenningScreen model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new openning_screen",
                        "type": "string",
                        "example": "A nice openning_screen"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OpenningScreen"
                }
            },
            "Option": {
                "title": "Option",
                "description": "Option model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new option",
                        "type": "string",
                        "example": "A nice option"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Option"
                }
            },
            "OrderRequest": {
                "title": "OrderRequest",
                "description": "OrderRequest model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new order_request",
                        "type": "string",
                        "example": "A nice order_request"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OrderRequest"
                }
            },
            "Point": {
                "title": "Point",
                "description": "Point model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new point",
                        "type": "string",
                        "example": "A nice point"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Point"
                }
            },
            "Policy": {
                "title": "Policy",
                "description": "Policy model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new policy",
                        "type": "string",
                        "example": "A nice policy"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Policy"
                }
            },
            "Seller": {
                "title": "Provider",
                "description": "Provider model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new provider",
                        "type": "string",
                        "example": "A nice provider"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Provider"
                }
            },
            "ShopCategory": {
                "title": "ShopCategory",
                "description": "ShopCategory model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new shop_category",
                        "type": "string",
                        "example": "A nice shop_category"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ShopCategory"
                }
            },
            "ShopService": {
                "title": "ShopService",
                "description": "ShopService model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new shop_service",
                        "type": "string",
                        "example": "A nice shop_service"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ShopService"
                }
            },
            "Slider": {
                "title": "Slider",
                "description": "Slider model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new slider",
                        "type": "string",
                        "example": "A nice slider"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Slider"
                }
            },
            "Speciality": {
                "title": "Speciality",
                "description": "Speciality model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new speciality",
                        "type": "string",
                        "example": "A nice speciality"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Speciality"
                }
            },
            "Wallet": {
                "title": "Wallet",
                "description": "Wallet model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new wallet",
                        "type": "string",
                        "example": "A nice wallet"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Wallet"
                }
            },
            "AccountPromotionResource": {
                "title": "AccountPromotionResource",
                "description": "AccountPromotion resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "AccountPromotionResource"
                }
            },
            "AdResource": {
                "title": "AdResource",
                "description": "Ad resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "AdResource"
                }
            },
            "CategoryResource": {
                "title": "CategoryResource",
                "description": "Category resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CategoryResource"
                }
            },
            "CollaboratorResource": {
                "title": "CollaboratorResource",
                "description": "Collaborator resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CollaboratorResource"
                }
            },
            "ContentRequestResource": {
                "title": "ContentRequestResource",
                "description": "ContentRequest resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ContentRequestResource"
                }
            },
            "CouponResource": {
                "title": "CouponResource",
                "description": "Coupon resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CouponResource"
                }
            },
            "FeatureResource": {
                "title": "FeatureResource",
                "description": "Feature resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "FeatureResource"
                }
            },
            "FilteredWordResource": {
                "title": "FilteredWordResource",
                "description": "FilteredWord resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "FilteredWordResource"
                }
            },
            "OpenningScreenResource": {
                "title": "OpenningScreenResource",
                "description": "OpenningScreen resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OpenningScreenResource"
                }
            },
            "OptionResource": {
                "title": "OptionResource",
                "description": "Option resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OptionResource"
                }
            },
            "OrderRequestResource": {
                "title": "OrderRequestResource",
                "description": "OrderRequest resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OrderRequestResource"
                }
            },
            "PointResource": {
                "title": "PointResource",
                "description": "Point resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PointResource"
                }
            },
            "PolicyResource": {
                "title": "PolicyResource",
                "description": "Policy resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PolicyResource"
                }
            },
            "SellerResource": {
                "title": "SellerResource",
                "description": "Seller resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SellerResource"
                }
            },
            "ShopCategoryResource": {
                "title": "ShopCategoryResource",
                "description": "ShopCategory resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ShopCategoryResource"
                }
            },
            "ShopServiceResource": {
                "title": "ShopServiceResource",
                "description": "ShopService resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ShopServiceResource"
                }
            },
            "SliderResource": {
                "title": "SliderResource",
                "description": "Slider resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SliderResource"
                }
            },
            "SpecialityResource": {
                "title": "SpecialityResource",
                "description": "Speciality resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SpecialityResource"
                }
            },
            "WalletResource": {
                "title": "WalletResource",
                "description": "Wallet resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "WalletResource"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Categories",
            "description": "API Endpoints of Categories"
        }
    ],
    "security": [
        []
    ]
}